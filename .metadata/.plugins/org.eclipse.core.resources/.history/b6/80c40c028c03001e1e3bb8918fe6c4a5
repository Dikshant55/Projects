package com.Example.StudentMangementSystem;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import lombok.AllArgsConstructor;

@RestController
@AllArgsConstructor
@RequestMapping("api/student")
public class StudentController {
	
	@Autowired
	private StudentServiceImpl studentService;
	@Autowired
	private StudentDao dao;
	
	 @PostMapping
	public ResponseEntity<Student>createStudent(@RequestBody Student student){
       Student savedStudent =studentService.createStudent(student);
       return new ResponseEntity<>(savedStudent,HttpStatus.CREATED);
	}
	
	@GetMapping("{rollno}")
	public ResponseEntity<Student>getStudentByRollno(@PathVariable("rollno") Integer rollno ){
		Student student = studentService.getStudentByRollno(rollno);
        return new ResponseEntity<>(student, HttpStatus.OK);
	}
	
	 @PutMapping("{id}")
	    public ResponseEntity<Student> updateStudent(@PathVariable("id") Integer rollno,
	                                           @RequestBody Student student){
	        student.setRollno(rollno);
	        Student updatedStudent = studentService.updateStudent(student); 
	        return new ResponseEntity<>(updatedStudent, HttpStatus.OK);
	    }
	
	 @GetMapping
	    public ResponseEntity<List<Student>> getAllStudent(){
	        List<Student> users = studentService.getallStudent();
	        return new ResponseEntity<>(users, HttpStatus.OK);
	    }
	
	 @DeleteMapping("{id}")
	    public ResponseEntity<String> deleteStudent(@PathVariable("id") Integer rollno){
	        studentService.deleteStudent(rollno);
	        return new ResponseEntity<>("Student successfully deleted!", HttpStatus.OK);
	    }
	 @RequestMapping("{id}")
	 public Integer fetchStudentName() {
		return studentService.fetchStudentName();
		 
	 }
	 @GetMapping("/findStudentByRollNo/{rollno}")
		public List<Student> findStudent(@PathVariable int rollno){
			
			return dao.getStudentByRollNo(rollno);
		}
}
